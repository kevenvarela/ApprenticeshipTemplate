{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","tlfrontend/tests/adapters/application.jshint.js","tlfrontend/tests/app.jshint.js","tlfrontend/tests/controllers/home.jshint.js","tlfrontend/tests/controllers/home/catalogo.jshint.js","tlfrontend/tests/controllers/home/login.jshint.js","tlfrontend/tests/controllers/home/registrar.jshint.js","tlfrontend/tests/controllers/nuevo-libro.jshint.js","tlfrontend/tests/helpers/destroy-app.js","tlfrontend/tests/helpers/destroy-app.jshint.js","tlfrontend/tests/helpers/module-for-acceptance.js","tlfrontend/tests/helpers/module-for-acceptance.jshint.js","tlfrontend/tests/helpers/resolver.js","tlfrontend/tests/helpers/resolver.jshint.js","tlfrontend/tests/helpers/start-app.js","tlfrontend/tests/helpers/start-app.jshint.js","tlfrontend/tests/models/cajero.jshint.js","tlfrontend/tests/models/carrito.jshint.js","tlfrontend/tests/models/cliente.jshint.js","tlfrontend/tests/models/libro.jshint.js","tlfrontend/tests/models/nuevo-cliente.jshint.js","tlfrontend/tests/resolver.jshint.js","tlfrontend/tests/router.jshint.js","tlfrontend/tests/routes/cobrar.jshint.js","tlfrontend/tests/routes/home.jshint.js","tlfrontend/tests/routes/home/carrito.jshint.js","tlfrontend/tests/routes/home/libro.jshint.js","tlfrontend/tests/routes/home/login.jshint.js","tlfrontend/tests/routes/home/news.jshint.js","tlfrontend/tests/routes/home/registrar.jshint.js","tlfrontend/tests/routes/nuevo-libro.jshint.js","tlfrontend/tests/serializers/application.jshint.js","tlfrontend/tests/test-helper.js","tlfrontend/tests/test-helper.jshint.js","tlfrontend/tests/unit/adapters/application-test.js","tlfrontend/tests/unit/adapters/application-test.jshint.js","tlfrontend/tests/unit/adapters/login-test.js","tlfrontend/tests/unit/adapters/login-test.jshint.js","tlfrontend/tests/unit/controllers/home-test.js","tlfrontend/tests/unit/controllers/home-test.jshint.js","tlfrontend/tests/unit/controllers/home/catalogo-test.js","tlfrontend/tests/unit/controllers/home/catalogo-test.jshint.js","tlfrontend/tests/unit/controllers/home/login-test.js","tlfrontend/tests/unit/controllers/home/login-test.jshint.js","tlfrontend/tests/unit/controllers/nuevo-libro-test.js","tlfrontend/tests/unit/controllers/nuevo-libro-test.jshint.js","tlfrontend/tests/unit/controllers/registrar-test.js","tlfrontend/tests/unit/controllers/registrar-test.jshint.js","tlfrontend/tests/unit/models/cajero-test.js","tlfrontend/tests/unit/models/cajero-test.jshint.js","tlfrontend/tests/unit/models/carrito-test.js","tlfrontend/tests/unit/models/carrito-test.jshint.js","tlfrontend/tests/unit/models/catalogo-test.js","tlfrontend/tests/unit/models/catalogo-test.jshint.js","tlfrontend/tests/unit/models/cliente-test.js","tlfrontend/tests/unit/models/cliente-test.jshint.js","tlfrontend/tests/unit/models/libro-test.js","tlfrontend/tests/unit/models/libro-test.jshint.js","tlfrontend/tests/unit/models/nuevo-cliente-test.js","tlfrontend/tests/unit/models/nuevo-cliente-test.jshint.js","tlfrontend/tests/unit/routes/cobrar-test.js","tlfrontend/tests/unit/routes/cobrar-test.jshint.js","tlfrontend/tests/unit/routes/home-test.js","tlfrontend/tests/unit/routes/home-test.jshint.js","tlfrontend/tests/unit/routes/home/carrito-test.js","tlfrontend/tests/unit/routes/home/carrito-test.jshint.js","tlfrontend/tests/unit/routes/home/catalogo-test.js","tlfrontend/tests/unit/routes/home/catalogo-test.jshint.js","tlfrontend/tests/unit/routes/home/login-test.js","tlfrontend/tests/unit/routes/home/login-test.jshint.js","tlfrontend/tests/unit/routes/home/news-test.js","tlfrontend/tests/unit/routes/home/news-test.jshint.js","tlfrontend/tests/unit/routes/libro-test.js","tlfrontend/tests/unit/routes/libro-test.jshint.js","tlfrontend/tests/unit/routes/nuevo-libro-test.js","tlfrontend/tests/unit/routes/nuevo-libro-test.jshint.js","tlfrontend/tests/unit/routes/registrar-test.js","tlfrontend/tests/unit/routes/registrar-test.jshint.js","tlfrontend/tests/unit/serializers/application-test.js","tlfrontend/tests/unit/serializers/application-test.jshint.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define('tlfrontend/tests/adapters/application.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | adapters/application.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'adapters/application.js should pass jshint.');\n  });\n});","define('tlfrontend/tests/app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass jshint.');\n  });\n});","define('tlfrontend/tests/controllers/home.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/home.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/home.js should pass jshint.');\n  });\n});","define('tlfrontend/tests/controllers/home/catalogo.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/home/catalogo.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/home/catalogo.js should pass jshint.');\n  });\n});","define('tlfrontend/tests/controllers/home/login.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/home/login.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'controllers/home/login.js should pass jshint.\\ncontrollers/home/login.js: line 8, col 9, Unexpected \\')\\'.\\ncontrollers/home/login.js: line 8, col 9, Expected an identifier and instead saw \\')\\'.\\ncontrollers/home/login.js: line 9, col 5, Expected \\')\\' and instead saw \\'}\\'.\\ncontrollers/home/login.js: line 9, col 6, Missing semicolon.\\ncontrollers/home/login.js: line 11, col 2, Expected \\'}\\' to match \\'{\\' from line 3 and instead saw \\')\\'.\\ncontrollers/home/login.js: line 11, col 3, Expected \\')\\' and instead saw \\';\\'.\\ncontrollers/home/login.js: line 11, col 4, Missing semicolon.\\n\\n7 errors');\n  });\n});","define('tlfrontend/tests/controllers/home/registrar.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/home/registrar.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/home/registrar.js should pass jshint.');\n  });\n});","define('tlfrontend/tests/controllers/nuevo-libro.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/nuevo-libro.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'controllers/nuevo-libro.js should pass jshint.\\ncontrollers/nuevo-libro.js: line 9, col 37, Missing semicolon.\\n\\n1 error');\n  });\n});","define('tlfrontend/tests/helpers/destroy-app', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = destroyApp;\n\n  function destroyApp(application) {\n    _ember['default'].run(application, 'destroy');\n  }\n});","define('tlfrontend/tests/helpers/destroy-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/destroy-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/destroy-app.js should pass jshint.');\n  });\n});","define('tlfrontend/tests/helpers/module-for-acceptance', ['exports', 'qunit', 'ember', 'tlfrontend/tests/helpers/start-app', 'tlfrontend/tests/helpers/destroy-app'], function (exports, _qunit, _ember, _tlfrontendTestsHelpersStartApp, _tlfrontendTestsHelpersDestroyApp) {\n  var Promise = _ember['default'].RSVP.Promise;\n\n  exports['default'] = function (name) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    (0, _qunit.module)(name, {\n      beforeEach: function beforeEach() {\n        this.application = (0, _tlfrontendTestsHelpersStartApp['default'])();\n\n        if (options.beforeEach) {\n          return options.beforeEach.apply(this, arguments);\n        }\n      },\n\n      afterEach: function afterEach() {\n        var _this = this;\n\n        var afterEach = options.afterEach && options.afterEach.apply(this, arguments);\n        return Promise.resolve(afterEach).then(function () {\n          return (0, _tlfrontendTestsHelpersDestroyApp['default'])(_this.application);\n        });\n      }\n    });\n  };\n});","define('tlfrontend/tests/helpers/module-for-acceptance.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/module-for-acceptance.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/module-for-acceptance.js should pass jshint.');\n  });\n});","define('tlfrontend/tests/helpers/resolver', ['exports', 'tlfrontend/resolver', 'tlfrontend/config/environment'], function (exports, _tlfrontendResolver, _tlfrontendConfigEnvironment) {\n\n  var resolver = _tlfrontendResolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: _tlfrontendConfigEnvironment['default'].modulePrefix,\n    podModulePrefix: _tlfrontendConfigEnvironment['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n});","define('tlfrontend/tests/helpers/resolver.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/resolver.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/resolver.js should pass jshint.');\n  });\n});","define('tlfrontend/tests/helpers/start-app', ['exports', 'ember', 'tlfrontend/app', 'tlfrontend/config/environment'], function (exports, _ember, _tlfrontendApp, _tlfrontendConfigEnvironment) {\n  exports['default'] = startApp;\n\n  function startApp(attrs) {\n    var application = undefined;\n\n    var attributes = _ember['default'].merge({}, _tlfrontendConfigEnvironment['default'].APP);\n    attributes = _ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    _ember['default'].run(function () {\n      application = _tlfrontendApp['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n});","define('tlfrontend/tests/helpers/start-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/start-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/start-app.js should pass jshint.');\n  });\n});","define('tlfrontend/tests/models/cajero.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | models/cajero.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/cajero.js should pass jshint.');\n  });\n});","define('tlfrontend/tests/models/carrito.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | models/carrito.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/carrito.js should pass jshint.');\n  });\n});","define('tlfrontend/tests/models/cliente.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | models/cliente.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/cliente.js should pass jshint.');\n  });\n});","define('tlfrontend/tests/models/libro.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | models/libro.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/libro.js should pass jshint.');\n  });\n});","define('tlfrontend/tests/models/nuevo-cliente.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | models/nuevo-cliente.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/nuevo-cliente.js should pass jshint.');\n  });\n});","define('tlfrontend/tests/resolver.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | resolver.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'resolver.js should pass jshint.');\n  });\n});","define('tlfrontend/tests/router.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | router.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass jshint.');\n  });\n});","define('tlfrontend/tests/routes/cobrar.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/cobrar.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/cobrar.js should pass jshint.');\n  });\n});","define('tlfrontend/tests/routes/home.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/home.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/home.js should pass jshint.');\n  });\n});","define('tlfrontend/tests/routes/home/carrito.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/home/carrito.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/home/carrito.js should pass jshint.');\n  });\n});","define('tlfrontend/tests/routes/home/libro.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/home/libro.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/home/libro.js should pass jshint.');\n  });\n});","define('tlfrontend/tests/routes/home/login.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/home/login.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/home/login.js should pass jshint.');\n  });\n});","define('tlfrontend/tests/routes/home/news.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/home/news.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/home/news.js should pass jshint.');\n  });\n});","define('tlfrontend/tests/routes/home/registrar.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/home/registrar.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/home/registrar.js should pass jshint.');\n  });\n});","define('tlfrontend/tests/routes/nuevo-libro.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/nuevo-libro.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/nuevo-libro.js should pass jshint.');\n  });\n});","define('tlfrontend/tests/serializers/application.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | serializers/application.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'serializers/application.js should pass jshint.');\n  });\n});","define('tlfrontend/tests/test-helper', ['exports', 'tlfrontend/tests/helpers/resolver', 'ember-qunit'], function (exports, _tlfrontendTestsHelpersResolver, _emberQunit) {\n\n  (0, _emberQunit.setResolver)(_tlfrontendTestsHelpersResolver['default']);\n});","define('tlfrontend/tests/test-helper.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | test-helper.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass jshint.');\n  });\n});","define('tlfrontend/tests/unit/adapters/application-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('adapter:application', 'Unit | Adapter | application', {\n    // Specify the other units that are required for this test.\n    // needs: ['serializer:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var adapter = this.subject();\n    assert.ok(adapter);\n  });\n});","define('tlfrontend/tests/unit/adapters/application-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/adapters/application-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/adapters/application-test.js should pass jshint.');\n  });\n});","define('tlfrontend/tests/unit/adapters/login-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('adapter:login', 'Unit | Adapter | login', {\n    // Specify the other units that are required for this test.\n    // needs: ['serializer:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var adapter = this.subject();\n    assert.ok(adapter);\n  });\n});","define('tlfrontend/tests/unit/adapters/login-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/adapters/login-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/adapters/login-test.js should pass jshint.');\n  });\n});","define('tlfrontend/tests/unit/controllers/home-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:home', 'Unit | Controller | home', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('tlfrontend/tests/unit/controllers/home-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/controllers/home-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/home-test.js should pass jshint.');\n  });\n});","define('tlfrontend/tests/unit/controllers/home/catalogo-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:home/catalogo', 'Unit | Controller | home/catalogo', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('tlfrontend/tests/unit/controllers/home/catalogo-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/controllers/home/catalogo-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/home/catalogo-test.js should pass jshint.');\n  });\n});","define('tlfrontend/tests/unit/controllers/home/login-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:home/login', 'Unit | Controller | home/login', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('tlfrontend/tests/unit/controllers/home/login-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/controllers/home/login-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/home/login-test.js should pass jshint.');\n  });\n});","define('tlfrontend/tests/unit/controllers/nuevo-libro-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:nuevo-libro', 'Unit | Controller | nuevo libro', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('tlfrontend/tests/unit/controllers/nuevo-libro-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/controllers/nuevo-libro-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/nuevo-libro-test.js should pass jshint.');\n  });\n});","define('tlfrontend/tests/unit/controllers/registrar-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:registrar', 'Unit | Controller | registrar', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('tlfrontend/tests/unit/controllers/registrar-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/controllers/registrar-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/registrar-test.js should pass jshint.');\n  });\n});","define('tlfrontend/tests/unit/models/cajero-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('cajero', 'Unit | Model | cajero', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('tlfrontend/tests/unit/models/cajero-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/models/cajero-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/cajero-test.js should pass jshint.');\n  });\n});","define('tlfrontend/tests/unit/models/carrito-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('carrito', 'Unit | Model | carrito', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('tlfrontend/tests/unit/models/carrito-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/models/carrito-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/carrito-test.js should pass jshint.');\n  });\n});","define('tlfrontend/tests/unit/models/catalogo-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('catalogo', 'Unit | Model | catalogo', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('tlfrontend/tests/unit/models/catalogo-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/models/catalogo-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/catalogo-test.js should pass jshint.');\n  });\n});","define('tlfrontend/tests/unit/models/cliente-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('cliente', 'Unit | Model | cliente', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('tlfrontend/tests/unit/models/cliente-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/models/cliente-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/cliente-test.js should pass jshint.');\n  });\n});","define('tlfrontend/tests/unit/models/libro-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('libro', 'Unit | Model | libro', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('tlfrontend/tests/unit/models/libro-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/models/libro-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/libro-test.js should pass jshint.');\n  });\n});","define('tlfrontend/tests/unit/models/nuevo-cliente-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('nuevo-cliente', 'Unit | Model | nuevo cliente', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('tlfrontend/tests/unit/models/nuevo-cliente-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/models/nuevo-cliente-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/nuevo-cliente-test.js should pass jshint.');\n  });\n});","define('tlfrontend/tests/unit/routes/cobrar-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:cobrar', 'Unit | Route | cobrar', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('tlfrontend/tests/unit/routes/cobrar-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/cobrar-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/cobrar-test.js should pass jshint.');\n  });\n});","define('tlfrontend/tests/unit/routes/home-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:home', 'Unit | Route | home', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('tlfrontend/tests/unit/routes/home-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/home-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/home-test.js should pass jshint.');\n  });\n});","define('tlfrontend/tests/unit/routes/home/carrito-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:home/carrito', 'Unit | Route | home/carrito', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('tlfrontend/tests/unit/routes/home/carrito-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/home/carrito-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/home/carrito-test.js should pass jshint.');\n  });\n});","define('tlfrontend/tests/unit/routes/home/catalogo-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:home/catalogo', 'Unit | Route | home/catalogo', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('tlfrontend/tests/unit/routes/home/catalogo-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/home/catalogo-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/home/catalogo-test.js should pass jshint.');\n  });\n});","define('tlfrontend/tests/unit/routes/home/login-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:home/login', 'Unit | Route | home/login', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('tlfrontend/tests/unit/routes/home/login-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/home/login-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/home/login-test.js should pass jshint.');\n  });\n});","define('tlfrontend/tests/unit/routes/home/news-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:home/news', 'Unit | Route | home/news', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('tlfrontend/tests/unit/routes/home/news-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/home/news-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/home/news-test.js should pass jshint.');\n  });\n});","define('tlfrontend/tests/unit/routes/libro-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:libro', 'Unit | Route | libro', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('tlfrontend/tests/unit/routes/libro-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/libro-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/libro-test.js should pass jshint.');\n  });\n});","define('tlfrontend/tests/unit/routes/nuevo-libro-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:nuevo-libro', 'Unit | Route | nuevo libro', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('tlfrontend/tests/unit/routes/nuevo-libro-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/nuevo-libro-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/nuevo-libro-test.js should pass jshint.');\n  });\n});","define('tlfrontend/tests/unit/routes/registrar-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:registrar', 'Unit | Route | registrar', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('tlfrontend/tests/unit/routes/registrar-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/registrar-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/registrar-test.js should pass jshint.');\n  });\n});","define('tlfrontend/tests/unit/serializers/application-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('application', 'Unit | Serializer | application', {\n    // Specify the other units that are required for this test.\n    needs: ['serializer:application']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it serializes records', function (assert) {\n    var record = this.subject();\n\n    var serializedRecord = record.serialize();\n\n    assert.ok(serializedRecord);\n  });\n});","define('tlfrontend/tests/unit/serializers/application-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/serializers/application-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/serializers/application-test.js should pass jshint.');\n  });\n});","/* jshint ignore:start */\n\nrequire('tlfrontend/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;","file":"tests.js"}